# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Start PostgreSQL on Ubuntu
        run: |
          sudo systemctl start postgresql.service
          pg_isready
      - name: Create DB User
        run: |
          sudo -u postgres psql --command="CREATE USER pgtest PASSWORD '123456'" --command="\du"
      - name: Create Test Database
        run: |
          sudo -u postgres createdb --owner=pgtest epic-mail-test
          PGPASSWORD=123456 psql --username=pgtest --host=localhost --list epic-mail-test
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_DEBUG: false
          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          envkey_DB_USER: ${{ secrets.DB_USER }}
          envkey_DB_NAME_TEST: ${{ secrets.DB_NAME_TEST }}
          envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          envkey_DB_PORT: ${{ secrets.DB_PORT }}
          envkey_ADMIN_FIRSTNAME: ${{ secrets.ADMIN_FIRSTNAME }}
          envkey_ADMIN_LASTNAME: ${{ secrets.ADMIN_LASTNAME }}
          envkey_ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          envkey_ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          envkey_ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          envkey_IS_ADMIN: ${{ secrets.IS_ADMIN }}
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          file_name: .env
      - run: npm test
      - run: npm run report-coverage
 
